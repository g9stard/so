<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>후면 카메라 촬영</title>
    <style>
        #camera-container {
            position: relative;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        video {
            width: 100%;
            height: auto;
        }
        .guide {
            position: absolute;
            border: 2px dashed rgba(255, 0, 0, 0.5);
        }
        .square {
            width: 20px;
            height: 20px;
            border: 1px solid rgba(255, 0, 0, 0.5);
            position: absolute;
        }
    </style>
</head>
<body>
    <div id="camera-container">
        <video id="video" autoplay></video>
        <canvas id="canvas" style="display: none;"></canvas>
        <div class="guide" style="top: 10%; left: 10%;">
            <div class="square" style="top: 0; left: 0;"></div>
            <div class="square" style="top: 0; left: 30px;"></div>
            <div class="square" style="top: 0; left: 60px;"></div>
            <div class="square" style="top: 0; left: 90px;"></div>
            <div class="square" style="top: 0; left: 120px;"></div>
        </div>
    </div>
    <button id="capture">촬영하기</button>
    <img id="result" alt="Captured Image" style="display: none;"/>
    
    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const resultImg = document.getElementById('result');
        const captureBtn = document.getElementById('capture');

        // 카메라 접근
        navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } })
            .then(stream => {
                video.srcObject = stream;
            })
            .catch(err => {
                console.error("카메라 접근 오류:", err);
            });

        // 촬영하기 버튼 클릭 시
        captureBtn.addEventListener('click', () => {
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            const dataURL = canvas.toDataURL('image/png');
            resultImg.src = dataURL;
            resultImg.style.display = 'block';
        });
    </script>
</body>
</html>
